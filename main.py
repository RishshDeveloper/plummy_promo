#!/usr/bin/env python3
"""
PlummyPromo Telegram Bot

–ë–æ—Ç –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ –æ–¥–µ–∂–¥—ã —Å —Å–∏—Å—Ç–µ–º–æ–π –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤,
–∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –∏ FAQ.

–ê–≤—Ç–æ—Ä: PlummyPromo Team
–í–µ—Ä—Å–∏—è: 1.0.0
"""

import asyncio
import logging
import os
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –º–æ–¥—É–ª–∏
from utils.config import Config
from database.database import db
from handlers.user import UserHandlers
from handlers.admin import AdminHandlers
from utils.monitoring import SiteMonitoring
from utils.notifications import PromoNotificationSystem, notification_system

# Health-check —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±–ª–∞—á–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
try:
    from healthcheck import start_health_check_server
    HEALTHCHECK_ENABLED = True
except ImportError:
    HEALTHCHECK_ENABLED = False


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    handlers=[
        logging.FileHandler('bot.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)


class PlummyPromoBot:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ PlummyPromo"""
    
    def __init__(self):
        self.application = None
    
    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        app = self.application
        
        # === –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –ö–û–ú–ê–ù–î–´ ===
        app.add_handler(CommandHandler("start", UserHandlers.start_command))
        app.add_handler(CommandHandler("help", UserHandlers.help_command))
        app.add_handler(CommandHandler("promo", UserHandlers.promo_command))
        app.add_handler(CommandHandler("faq", UserHandlers.faq_command))
        
        # === –ê–î–ú–ò–ù–°–ö–ò–ï –ö–û–ú–ê–ù–î–´ ===
        app.add_handler(CommandHandler("stats", AdminHandlers.admin_stats))
        app.add_handler(CommandHandler("admin_help", AdminHandlers.admin_help))
        
        # === CALLBACK QUERY HANDLERS ===
        # –ê–¥–º–∏–Ω—Å–∫–∏–µ callbacks
        app.add_handler(CallbackQueryHandler(
            AdminHandlers.handle_admin_callback,
            pattern=r"^admin_|^confirm_broadcast_"
        ))
        
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ callbacks  
        app.add_handler(CallbackQueryHandler(
            UserHandlers.handle_callback,
            pattern=r"^(faq_|get_promo|back_to_faq)"
        ))
        
        # === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –¢–ï–ö–°–¢–û–í–´–• –°–û–û–ë–©–ï–ù–ò–ô ===
        # –ê–¥–º–∏–Ω—Å–∫–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏)
        app.add_handler(MessageHandler(
            filters.TEXT & filters.User(Config.ADMIN_IDS),
            self._handle_admin_text
        ))
        
        # –û–±—ã—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        app.add_handler(MessageHandler(
            filters.TEXT & ~filters.COMMAND,
            UserHandlers.handle_text_messages
        ))
        
        # === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –û–®–ò–ë–û–ö ===
        app.add_error_handler(self._error_handler)
        
        logger.info("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    
    async def _handle_admin_text(self, update, context):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∞–¥–º–∏–Ω–∞"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
        if context.user_data.get('awaiting_broadcast'):
            await AdminHandlers.admin_broadcast_message(update, context)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ –≤–≤–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        elif (context.user_data.get('waiting_for_discount') or 
              context.user_data.get('waiting_for_duration') or
              context.user_data.get('waiting_for_promo_code')):
            await AdminHandlers.handle_admin_text_input(update, context)
        else:
            # –û–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞
            await UserHandlers.handle_text_messages(update, context)
    
    async def _error_handler(self, update, context):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
        logger.error(f"Update {update} caused error {context.error}")
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å update, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if update and update.effective_message:
            try:
                await update.effective_message.reply_text(
                    "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. "
                    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
                )
            except Exception as e:
                logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {e}")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ PlummyPromo Bot...")
        
        # –ó–∞–ø—É—Å–∫ health-check —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ–±–ª–∞—á–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
        if HEALTHCHECK_ENABLED:
            try:
                port = int(os.getenv('PORT', 8080))
                start_health_check_server(port)
                logger.info(f"‚úÖ Health-check —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å health-check —Å–µ—Ä–≤–µ—Ä: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        logger.info("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        Config.validate()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await db.init()
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–æ—Ç–∞
        bot = PlummyPromoBot()
        bot.application = Application.builder().token(Config.BOT_TOKEN).build()
        bot._register_handlers()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∞–π—Ç–∞
        from utils.monitoring import site_monitoring
        import utils.monitoring as monitoring_module
        monitoring_module.site_monitoring = SiteMonitoring(bot.application.bot)
        logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–æ–º–æ–∫–æ–¥–∞—Ö
        import utils.notifications as notifications_module
        notifications_module.notification_system = PromoNotificationSystem(bot.application.bot)
        logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        print("=" * 50)
        print(f"üéâ {Config.SHOP_NAME} Telegram Bot")  
        print("=" * 50)
        print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        print(f"üè™ –ú–∞–≥–∞–∑–∏–Ω: {Config.SHOP_URL}")
        print(f"üë®‚Äçüíº –ê–¥–º–∏–Ω ID: {Config.ADMIN_ID}")
        print(f"üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {Config.DB_PATH}")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ
        if Config.UPTIMEROBOT_ENABLED:
            print(f"üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∞–π—Ç–∞: –≤–∫–ª—é—á–µ–Ω (–∏–Ω—Ç–µ—Ä–≤–∞–ª {Config.UPTIMEROBOT_CHECK_INTERVAL}—Å)")
        else:
            print("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∞–π—Ç–∞: –æ—Ç–∫–ª—é—á–µ–Ω")
        
        # –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–æ–º–æ–∫–æ–¥–∞—Ö
        await notifications_module.notification_system.start_notifications()
        print("üì± –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–æ–º–æ–∫–æ–¥–∞—Ö: –∑–∞–ø—É—â–µ–Ω–∞")
        
        print("=" * 50)
        print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("üë§ –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: /start, /help, /promo, /faq")
        print("üë®‚Äçüíº –î–ª—è –∞–¥–º–∏–Ω–∞: /stats, /admin_help")
        print("=" * 50)
        print("üîÑ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç... (Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)")
        print()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞—é PlummyPromo –±–æ—Ç–∞...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        await bot.application.initialize()
        await bot.application.start()
        await bot.application.updater.start_polling(
            drop_pending_updates=True,
            allowed_updates=['message', 'callback_query']
        )
        
        # –ñ–¥–µ–º —Å–∏–≥–Ω–∞–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        try:
            # –ü—Ä–æ—Å—Ç–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ
            while True:
                await asyncio.sleep(1)
        finally:
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            if 'notifications_module' in locals() and notifications_module.notification_system:
                await notifications_module.notification_system.stop_notifications()
                logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            
            # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
            await bot.application.updater.stop()
            await bot.application.stop()
            await bot.application.shutdown()
    
    except KeyboardInterrupt:
        logger.info("üëã –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("\nüëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise


if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –≤–µ—Ä—Å–∏—é
    import sys
    if sys.version_info < (3, 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        sys.exit(1)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}", exc_info=True)
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        print("\nüîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (BOT_TOKEN, ADMIN_ID)")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        print("3. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ BOT_TOKEN")
        import traceback
        traceback.print_exc()
        sys.exit(1)
