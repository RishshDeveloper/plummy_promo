"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞ PlummyPromo
"""

from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from telegram.constants import ParseMode
from datetime import datetime, timedelta

from database.database import db
from data.faq import get_faq_categories, get_category_questions, search_faq
from utils.config import Config
from utils.analytics import AnalyticsHelper
from utils.promo import PromoCodeGenerator
from utils.woocommerce import woo_manager
from utils.media import media_manager


class UserHandlers:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    
    @staticmethod
    def get_main_keyboard():
        """–ü–æ–ª—É—á–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
        keyboard = [
            ["–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥"],
            ["FAQ", "–ü–æ–¥–¥–µ—Ä–∂–∫–∞"]
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    @staticmethod
    async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user = update.effective_user
        
        # –ü–∞—Ä—Å–∏–º UTM –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
        utm_data = {}
        if context.args:
            start_param = '_'.join(context.args)
            utm_data = AnalyticsHelper.parse_utm_params(start_param)
        
        referral_source = AnalyticsHelper.detect_referral_source(utm_data)
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await db.user.get_or_create_user(
            user_id=user.id,
            username=user.username,
            first_name=user.first_name,
            last_name=user.last_name,
            referral_source=referral_source
        )
        
        # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        await db.analytics.track_user_action(
            user_id=user.id,
            action_type='start',
            referral_source=referral_source,
            utm_data=utm_data
        )
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
        welcome_text = """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Plummy!

–ú—ã –¥–µ–ª–∞–µ–º –∑–∞–∫–∞–∑ –æ–¥–µ–∂–¥—ã –∏–∑ –∑–∞—Ä—É–±–µ–∂–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø—Ä–æ—Å—Ç—ã–º –∏ –≤—ã–≥–æ–¥–Ω—ã–º. –¢—ã—Å—è—á–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –∏ –±—ã—Å—Ç—Ä—ã–π –≤—ã–∫—É–ø –ª—é–±–æ–π –≤–µ—â–∏ –ø–æ–¥ –∑–∞–∫–∞–∑.

–ù–∞–∂–º–∏ –Ω–∞ ¬´–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥¬ª."""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º
        await media_manager.send_photo_with_text(
            update=update,
            event='hello',
            text=welcome_text,
            parse_mode=ParseMode.HTML,
            reply_markup=UserHandlers.get_main_keyboard()
        )
    
    @staticmethod
    async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = f"""
ü§ñ **–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É {Config.SHOP_NAME}**

**üéÅ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è:** –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ —Å–æ —Å–∫–∏–¥–∫–æ–π {Config.PROMO_DISCOUNT_PERCENT}%

üìã **–ö–æ–º–∞–Ω–¥—ã:**
‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
‚Ä¢ /promo - –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥  
‚Ä¢ /faq - –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üîò **–ö–Ω–æ–ø–∫–∏:**
‚Ä¢ **–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥** - –ü–æ–ª—É—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å–∫–∏–¥–∫—É
‚Ä¢ **FAQ** - –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –º–∞–≥–∞–∑–∏–Ω–µ
‚Ä¢ **–ü–æ–¥–¥–µ—Ä–∂–∫–∞** - –°–≤—è–∑—å —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏

üí° **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**
1. –ù–∞–∂–º–∏ "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥"
2. –°–∫–æ–ø–∏—Ä—É–π –∫–æ–¥ –∏ –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –Ω–∞ {Config.SHOP_URL}  
3. –ü—Ä–∏ –≤–æ–ø—Ä–æ—Å–∞—Ö –∂–º–∏ "FAQ" –∏–ª–∏ "–ü–æ–¥–¥–µ—Ä–∂–∫–∞"

üõç **–°–∞–π—Ç –º–∞–≥–∞–∑–∏–Ω–∞:** {Config.SHOP_URL}
        """
        
        await update.message.reply_text(
            help_text,
            parse_mode=ParseMode.HTML
        )
    
    @staticmethod
    async def promo_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /promo –∏ –∫–Ω–æ–ø–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞"""
        try:
            user = update.effective_user
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –í–°–ï –ø—Ä–æ–º–æ–∫–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤–∫–ª—é—á–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ)
            existing_codes = await db.promo.get_user_promo_codes(user.id)
            
            if existing_codes:
                # –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ª–∏ –æ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω
                used_codes = [code for code in existing_codes if code['is_used']]
                active_codes = [code for code in existing_codes if not code['is_used']]
                
                # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã —Å WooCommerce (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
                try:
                    if Config.WOOCOMMERCE_ENABLED and woo_manager.is_enabled():
                        codes_to_remove = []  # –ü—Ä–æ–º–æ–∫–æ–¥—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö
                        
                        for active_code in active_codes:
                            sync_result = await woo_manager.sync_coupon_status(
                                active_code['code'], 
                                active_code.get('woocommerce_id')
                            )
                            
                            if sync_result.get("synced", False):
                                # –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–∞–π—Ç–µ
                                if sync_result.get("is_used", False):
                                    # –ü—Ä–æ–º–æ–∫–æ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –≤ WooCommerce, –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É
                                    await db.promo.use_promo_code(active_code['code'])
                                    used_codes.append(active_code)
                                    codes_to_remove.append(active_code)
                            else:
                                # –ü—Ä–æ–º–æ–∫–æ–¥ –ù–ï –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–∞–π—Ç–µ (—É–¥–∞–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º)
                                error_msg = sync_result.get("error", "").lower()
                                if "–Ω–µ –Ω–∞–π–¥–µ–Ω" in error_msg or "not found" in error_msg:
                                    # –û—Ç–º–µ—á–∞–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π, —á—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                                    await db.promo.use_promo_code(active_code['code'])
                                    used_codes.append(active_code)
                                    codes_to_remove.append(active_code)
                                    
                                    import logging
                                    logging.getLogger(__name__).info(f"–ü—Ä–æ–º–æ–∫–æ–¥ {active_code['code']} —É–¥–∞–ª–µ–Ω —Å —Å–∞–π—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º, –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π –≤ –±–æ—Ç–µ")
                        
                        # –£–¥–∞–ª—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö
                        for code_to_remove in codes_to_remove:
                            if code_to_remove in active_codes:
                                active_codes.remove(code_to_remove)
                except Exception as e:
                    # –ï—Å–ª–∏ WooCommerce –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
                    import logging
                    logging.getLogger(__name__).warning(f"WooCommerce —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}")
                
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø—Ä–æ–º–æ–∫–æ–¥ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "—É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª"
                if used_codes:
                    message_text = """–¢—ã —É–∂–µ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Å–≤–æ–π –ø—Ä–æ–º–æ–∫–æ–¥, —Å–ø–∞—Å–∏–±–æ!

–ù–æ –¥–∞–∂–µ –±–µ–∑ –∞–∫—Ü–∏–π –º—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –¥–µ—Ä–∂–∞—Ç—å —Ü–µ–Ω—ã –Ω–∏–∂–µ —á–µ–º —É –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤, —É–±–µ–¥–∏—Å—å –≤ —ç—Ç–æ–º —Å–∞–º
<a href="http://plummy.ru/?utm_source=telegram&utm_medium=social&utm_campaign=bot">Plummy.ru</a>"""
                else:
                    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã –Ω–∞ –∏—Å—Ç–µ—á–µ–Ω–∏–µ
                    valid_active_codes = []
                    
                    for active_code in active_codes:
                        # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –†–ï–ê–õ–¨–ù–£–Æ –¥–∞—Ç—É –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å —Å–∞–π—Ç–∞ (–µ—Å–ª–∏ WooCommerce –≤–∫–ª—é—á–µ–Ω)
                        expiry_date = None
                        
                        if Config.WOOCOMMERCE_ENABLED and woo_manager.is_enabled():
                            try:
                                real_expiry_date = await woo_manager.get_coupon_expiry_date(active_code['code'])
                                if real_expiry_date:
                                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—É—é –¥–∞—Ç—É —Å —Å–∞–π—Ç–∞
                                    expiry_date = real_expiry_date
                            except Exception as e:
                                # –ü—Ä–∏ –æ—à–∏–±–∫–µ WooCommerce –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç (–Ω–∏–∂–µ)
                                import logging
                                logging.getLogger(__name__).warning(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞—Ç—ã –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å WooCommerce –¥–ª—è {active_code['code']}: {e}")
                        
                        # Fallback: —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞—Ç—É –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –±–æ—Ç–∞ (–µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ —Å —Å–∞–π—Ç–∞)
                        if not expiry_date:
                            created_date = datetime.strptime(active_code['created_date'][:19], "%Y-%m-%d %H:%M:%S")
                            duration_days = await db.settings.get_promo_duration_days()
                            expiry_date = created_date + timedelta(days=duration_days)
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥
                        if datetime.now() <= expiry_date:
                            valid_active_codes.append((active_code, expiry_date))
                    
                    if valid_active_codes:
                        # –ï—Å—Ç—å –¥–µ–π—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π
                        active_code, expiry_date = valid_active_codes[0]
                        expiry_formatted = expiry_date.strftime("%d.%m.%Y –≤ %H:%M")
                        
                        message_text = f"""–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥!

–ö–æ–¥: <code>{active_code['code']}</code>

–ü—Ä–∏ –µ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏, –º—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–±–µ—Ä–µ–º –Ω–∞—à—É –∫–æ–º–∏—Å—Å–∏—é –∏ –≤—ã –∑–∞–ø–ª–∞—Ç–∏—Ç–µ —Ç–æ–ª—å–∫–æ –∑–∞ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –≤—ã–∫—É–ø + –ª–æ–≥–∏—Å—Ç–∏–∫—É.

–ò—Å—Ç–µ–∫–∞–µ—Ç: {expiry_formatted}

–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
1Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç <a href="http://plummy.ru/?utm_source=telegram&utm_medium=social&utm_campaign=bot">plummy.ru</a>
2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ—Ä–∑–∏–Ω—É / –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ–æ—Ä–º–æ–π –¥–ª—è –≤—ã–∫—É–ø–∞
3Ô∏è‚É£ –ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥

–ï–≥–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑."""
                    else:
                        # –í—Å–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã –∏—Å—Ç–µ–∫–ª–∏
                        message_text = """–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏—Å—Ç–µ–∫(

–ù–æ –¥–∞–∂–µ –±–µ–∑ –∞–∫—Ü–∏–π –º—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –¥–µ—Ä–∂–∞—Ç—å —Ü–µ–Ω—ã –Ω–∏–∂–µ —á–µ–º —É –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤, —É–±–µ–¥–∏—Å—å –≤ —ç—Ç–æ–º —Å–∞–º
<a href="http://plummy.ru/?utm_source=telegram&utm_medium=social&utm_campaign=bot">Plummy.ru</a>"""
            else:
                # –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤, —Å–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π
                try:
                    promo_code = await db.promo.create_promo_code(
                        user_id=user.id
                        # discount_percent –±—É–¥–µ—Ç –≤–∑—è—Ç –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    )
                    
                    # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
                    await db.analytics.track_user_action(
                        user_id=user.id,
                        action_type='promo_request'
                    )
                    
                    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞—Ç—É –∏—Å—Ç–µ—á–µ–Ω–∏—è –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
                    duration_days = await db.settings.get_promo_duration_days()
                    expiry_date = datetime.now() + timedelta(days=duration_days)
                    expiry_formatted = expiry_date.strftime("%d.%m.%Y –≤ %H:%M")
                    
                    message_text = f"""üéâ –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥ –≥–æ—Ç–æ–≤!

–ö–æ–¥: <code>{promo_code}</code>

–ü—Ä–∏ –µ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏, –º—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–±–µ—Ä–µ–º –Ω–∞—à—É –∫–æ–º–∏—Å—Å–∏—é –∏ –≤—ã –∑–∞–ø–ª–∞—Ç–∏—Ç–µ —Ç–æ–ª—å–∫–æ –∑–∞ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –≤—ã–∫—É–ø + –ª–æ–≥–∏—Å—Ç–∏–∫—É.

–ò—Å—Ç–µ–∫–∞–µ—Ç: {expiry_formatted}

–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
1Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç <a href="http://plummy.ru/?utm_source=telegram&utm_medium=social&utm_campaign=bot">plummy.ru</a>
2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ—Ä–∑–∏–Ω—É / –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ–æ—Ä–º–æ–π –¥–ª—è –≤—ã–∫—É–ø–∞
3Ô∏è‚É£ –ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥

–ï–≥–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑."""
                except Exception as e:
                    message_text = """üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞.
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."""
            
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∏—Ç—É–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            buttons = []
            
            # –î–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —Å—Ä–æ–∫–∞ –∏–ª–∏ –æ–± —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–º –ø—Ä–æ–º–æ–∫–æ–¥–µ –∫–Ω–æ–ø–∫–∏ –Ω–µ –Ω—É–∂–Ω—ã
            if "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏—Å—Ç–µ–∫" in message_text or "—É–∂–µ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª" in message_text:
                # –ù–∏–∫–∞–∫–∏—Ö –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∏—Å—Ç–µ–∫—à–∏—Ö –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
                pass
            else:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç
                buttons.append([InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url="http://plummy.ru/?utm_source=telegram&utm_medium=social&utm_campaign=bot")])
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏
            keyboard = InlineKeyboardMarkup(buttons) if buttons else None
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            if "—É–∂–µ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª" in message_text:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ done
                event = 'done'
            elif "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏—Å—Ç–µ–∫" in message_text:
                # –ü—Ä–æ–º–æ–∫–æ–¥ –∏—Å—Ç–µ–∫ - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ finish
                event = 'finish'  
            elif ("–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥ –≥–æ—Ç–æ–≤" in message_text or 
                  "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥" in message_text):
                # –ù–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥ –∏–ª–∏ –ø–æ–∫–∞–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ promo
                event = 'promo'
            else:
                # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—à–∏–±–∫–∏) –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                await update.message.reply_text(
                    message_text,
                    reply_markup=keyboard,
                    parse_mode=ParseMode.HTML
                )
                return
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
            await media_manager.send_photo_with_text(
                update=update,
                event=event,
                text=message_text,
                parse_mode=ParseMode.HTML,
                reply_markup=keyboard
            )
        except Exception as e:
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            import logging
            logging.getLogger(__name__).error(f"–û—à–∏–±–∫–∞ –≤ promo_command: {e}", exc_info=True)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            error_message = """üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."""
            
            try:
                await update.message.reply_text(error_message, parse_mode=ParseMode.HTML)
            except Exception:
                # –ï—Å–ª–∏ –¥–∞–∂–µ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –Ω–µ —É–¥–∞–ª–∞—Å—å, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
                pass
    
    @staticmethod
    async def faq_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ FAQ"""
        # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä FAQ
        await db.analytics.track_user_action(
            user_id=update.effective_user.id,
            action_type='faq_view'
        )
        
        faq_text = """<b>–ö–∞–∫–∞—è –≤—ã–≥–æ–¥–∞ –¥–∞–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –∑–∞–∫–∞–∑ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏?</b>

–ú—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å –Ω–µ–¥–∞–≤–Ω–æ, —Ö–æ—Ç–∏–º –ø—Ä–∏–≤–ª–µ—á—å –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ —á–µ—Ä–µ–∑ –Ω–∞—Å —É–¥–æ–±–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å. –ü–æ—ç—Ç–æ–º—É —Å–µ–π—á–∞—Å –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–∫–∞–∑—ã –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É –≤ –Ω–æ–ª—å.

<b>–í –∫–∞—Ç–∞–ª–æ–≥–µ –Ω–µ—Ç —Ç–æ–≥–æ, —á—Ç–æ —è —Ö–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å</b>

–£ –Ω–∞—Å –º–æ–∂–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞, –Ω–æ –∏ –ø—Ä–æ—Å—Ç–æ –∑–∞–ø–æ–ª–Ω–∏–≤ —Ñ–æ—Ä–º—É –Ω–∞ –≤—ã–∫—É–ø <a href="http://plummy.ru/buyout?utm_source=telegram&utm_medium=social&utm_campaign=bot">plummy.ru/buyout</a>

<b>–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä?</b>

–í –Ω–∞—à–µ–º –∫–∞—Ç–∞–ª–æ–≥–µ –º—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –æ–±—É–≤–∏ –≤ EU, –æ–¥–µ–∂–¥—É ‚Äì –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Ä–∞–∑–º–µ—Ä–Ω–æ–π —Å–µ—Ç–∫–µ –±—Ä–µ–Ω–¥–∞. –ï—Å–ª–∏ —É –≤–∞—Å –ø–æ—è–≤–∏–ª–∏—Å—å —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –≤—ã–±–æ—Ä–æ–º —Ä–∞–∑–º–µ—Ä–∞ ‚Äì –Ω–∞–ø–∏—à–∏—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É, –æ–Ω –ø–æ–º–æ–∂–µ—Ç.

<b>–ú–æ–∂–µ—Ç –ª–∏ –ø—Ä–∏–π—Ç–∏ –Ω–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—â—å?</b>

–¢–∞–∫–æ–≥–æ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏, —Ç–∞–∫ –∫–∞–∫ –º—ã –≤—ã–∫—É–ø–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –±—É—Ç–∏–∫–æ–≤, –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–º–µ—é—Ç c–µp—Ç–∏—Ñ–∏–∫–∞—Ç—ã –øo–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏ –∏ –±–∏—Ä–∫–∏.

<b>–û—Ñ–æ—Ä–º–∏–ª –∑–∞–∫–∞–∑ –Ω–∞ —Å–∞–π—Ç–µ, —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?</b>

–° –≤–∞–º–∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑.

<b>–ú–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å, –µ—Å–ª–∏ –Ω–µ –ø–æ–¥–æ—à–µ–ª —Ä–∞–∑–º–µ—Ä / —Å—Ç–∏–ª—å?</b>

–ú—ã –≤—ã–∫—É–ø–∞–µ–º —Ç–æ–≤–∞—Ä –∏–∑-–∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã, –∏ –ø–æ–∫–∞ –æ–Ω –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è, —Å—Ä–æ–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –±—É—Ç–∏–∫–∞—Ö –æ–±—ã—á–Ω–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è. –ü–æ—ç—Ç–æ–º—É –æ—Ñ–æ—Ä–º–∏—Ç—å –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç –º—ã –Ω–µ –º–æ–∂–µ–º. –û–¥–Ω–∞–∫–æ –º—ã –º–æ–∂–µ–º –ø—Ä–∏–Ω—è—Ç—å –≤–µ—â—å –Ω–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é ‚Äî —Ä–∞–∑–º–µ—Å—Ç–∏–º –µ—ë –Ω–∞ –Ω–∞—à–∏—Ö –∏ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∏—Ö –ø–ª–æ—â–∞–¥–∫–∞—Ö, –ø—Ä–æ–¥–∞–¥–∏–º –∏ –≤–µ—Ä–Ω—ë–º –≤–∞–º –≤—Å—é —Å—É–º–º—É –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏."""
        
        await update.message.reply_text(faq_text, parse_mode=ParseMode.HTML)
    
    
    @staticmethod
    async def support_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ü–æ–¥–¥–µ—Ä–∂–∫–∞"""
        support_text = "–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞—à–µ–π —Å–ª—É–∂–±–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤ Telegram: @hey_plummy ‚Äî —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã–∫—É–ø–∞, —É—Ç–æ—á–Ω–∏—Ç—å –ø–æ —Å—Ä–æ–∫–∞–º –∏ —Ä–∞–∑–º–µ—Ä–∞–º, —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞."
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å —Ç–µ–∫—Å—Ç–æ–º
        await media_manager.send_photo_with_text(
            update=update,
            event='help',
            text=support_text
        )
    
    @staticmethod
    async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline –∫–Ω–æ–ø–æ–∫"""
        query = update.callback_query
        await query.answer()
        
        data = query.data
        
        if data.startswith("faq_"):
            await UserHandlers.show_faq_category(update, context, data[4:])
        elif data == "get_promo":
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É
            await UserHandlers.promo_command(update, context)
    
    @staticmethod
    async def show_faq_category(update: Update, context: ContextTypes.DEFAULT_TYPE, category_key: str):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ FAQ"""
        category_data = get_category_questions(category_key)
        
        if not category_data:
            await update.callback_query.edit_message_text("‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        text = f"**{category_data['title']}**\n\n"
        
        for i, question_data in enumerate(category_data['questions'], 1):
            text += f"**{i}. {question_data['question']}**\n"
            text += f"{question_data['answer']}\n\n"
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data="back_to_faq")]
        ])
        
        await update.callback_query.edit_message_text(
            text,
            reply_markup=keyboard,
            parse_mode=ParseMode.HTML
        )
    
    
    @staticmethod
    async def handle_text_messages(update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫–Ω–æ–ø–æ–∫"""
        text = update.message.text
        user = update.effective_user
        
        if text == "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥":
            await UserHandlers.promo_command(update, context)
        elif text == "FAQ":
            await UserHandlers.faq_command(update, context)
        elif text == "–ü–æ–¥–¥–µ—Ä–∂–∫–∞":
            await UserHandlers.support_command(update, context)
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–º–æ–∫–æ–¥ —Å –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é
            try:
                async with db.manager.get_connection() as conn:
                    cursor = await conn.execute("""
                        SELECT code FROM promocodes 
                        WHERE user_id = ? 
                        AND feedback_requested = 1 
                        AND is_used = 0
                        AND code NOT IN (SELECT promo_code FROM feedback WHERE user_id = ?)
                        ORDER BY feedback_request_date DESC
                        LIMIT 1
                    """, (user.id, user.id))
                    result = await cursor.fetchone()
                    
                    if result:
                        # –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ —Å –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é
                        promo_code = result[0]
                        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
                        await UserHandlers.handle_feedback(update, context, text, promo_code)
                    else:
                        # –ù–µ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏
                        pass
            except Exception as e:
                import logging
                logging.getLogger(__name__).error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏: {e}")
                pass
    
    @staticmethod
    async def handle_feedback(update: Update, context: ContextTypes.DEFAULT_TYPE, feedback_text: str, promo_code: str = 'UNKNOWN'):
        """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user = update.effective_user
        
        try:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            async with db.manager.get_connection() as conn:
                await conn.execute("""
                    INSERT INTO feedback (user_id, promo_code, feedback_text)
                    VALUES (?, ?, ?)
                """, (user.id, promo_code, feedback_text))
                await conn.commit()
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
            user_contact = f"@{user.username}" if user.username else f"ID: {user.id}"
            user_name = user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            if user.last_name:
                user_name += f" {user.last_name}"
            
            admin_message = f"""üìù –ü–æ–ª—É—á–µ–Ω–∞ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–≤—à–µ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}
üìû –ö–æ–Ω—Ç–∞–∫—Ç: {user_contact}
üé´ –ü—Ä–æ–º–æ–∫–æ–¥: {promo_code}

üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:
{feedback_text}"""
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
            for admin_id in Config.ADMIN_IDS:
                try:
                    await context.bot.send_message(
                        chat_id=admin_id,
                        text=admin_message,
                        parse_mode=ParseMode.HTML
                    )
                except Exception as e:
                    import logging
                    logging.getLogger(__name__).error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}: {e}")
            
            # –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await update.message.reply_text(
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á—Ç–µ–º –≤–∞—à–∏ –∑–∞–º–µ—á–∞–Ω–∏—è –∏ –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —Å—Ç–∞—Ç—å –ª—É—á—à–µ.",
                parse_mode=ParseMode.HTML
            )
            
            import logging
            logging.getLogger(__name__).info(f"üìù –ü–æ–ª—É—á–µ–Ω–∞ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
            
        except Exception as e:
            import logging
            logging.getLogger(__name__).error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏: {e}")
            await update.message.reply_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                parse_mode=ParseMode.HTML
            )
