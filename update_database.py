#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
"""

import asyncio
import aiosqlite
from utils.config import Config

async def update_database():
    """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db_path = Config.DB_PATH
    
    print("=" * 50)
    print("–û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    try:
        async with aiosqlite.connect(db_path) as db:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è feedback_requested –≤ —Ç–∞–±–ª–∏—Ü–µ promocodes
            cursor = await db.execute("PRAGMA table_info(promocodes)")
            columns = await cursor.fetchall()
            column_names = [col[1] for col in columns]
            
            updates_applied = []
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ feedback_requested –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if 'feedback_requested' not in column_names:
                print("\n‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è feedback_requested...")
                await db.execute("""
                    ALTER TABLE promocodes 
                    ADD COLUMN feedback_requested BOOLEAN DEFAULT 0
                """)
                updates_applied.append("feedback_requested")
            else:
                print("\n‚úì –ü–æ–ª–µ feedback_requested —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ feedback_request_date –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if 'feedback_request_date' not in column_names:
                print("‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è feedback_request_date...")
                await db.execute("""
                    ALTER TABLE promocodes 
                    ADD COLUMN feedback_request_date DATETIME NULL
                """)
                updates_applied.append("feedback_request_date")
            else:
                print("‚úì –ü–æ–ª–µ feedback_request_date —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü—ã feedback
            cursor = await db.execute("""
                SELECT name FROM sqlite_master 
                WHERE type='table' AND name='feedback'
            """)
            table_exists = await cursor.fetchone()
            
            if not table_exists:
                print("‚ûï –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã feedback...")
                await db.execute("""
                    CREATE TABLE feedback (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        user_id INTEGER NOT NULL,
                        promo_code TEXT NOT NULL,
                        feedback_text TEXT NOT NULL,
                        created_date DATETIME DEFAULT CURRENT_TIMESTAMP,
                        FOREIGN KEY (user_id) REFERENCES users (user_id)
                    )
                """)
                updates_applied.append("feedback table")
            else:
                print("‚úì –¢–∞–±–ª–∏—Ü–∞ feedback —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ (13%, 7 –¥–Ω–µ–π)
            print("\n‚öôÔ∏è  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
            cursor = await db.execute("SELECT value FROM bot_settings WHERE key = 'promo_discount_percent'")
            current_discount = await cursor.fetchone()
            
            cursor = await db.execute("SELECT value FROM bot_settings WHERE key = 'promo_duration_days'")
            current_duration = await cursor.fetchone()
            
            if current_discount:
                print(f"   –¢–µ–∫—É—â–∞—è —Å–∫–∏–¥–∫–∞: {current_discount[0]}%")
            if current_duration:
                print(f"   –¢–µ–∫—É—â–∏–π —Å—Ä–æ–∫: {current_duration[0]} –¥–Ω–µ–π")
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            await db.execute("""
                INSERT OR REPLACE INTO bot_settings (key, value, updated_date)
                VALUES ('promo_discount_percent', '13', datetime('now'))
            """)
            await db.execute("""
                INSERT OR REPLACE INTO bot_settings (key, value, updated_date)
                VALUES ('promo_duration_days', '7', datetime('now'))
            """)
            updates_applied.append("settings updated to 13% and 7 days")
            
            await db.commit()
            
            print("\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            
            if updates_applied:
                print(f"\nüìä –ü—Ä–∏–º–µ–Ω–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {len(updates_applied)}")
                for update in updates_applied:
                    print(f"   ‚úì {update}")
            else:
                print("\n‚ÑπÔ∏è  –í—Å–µ –ø–æ–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
            
            print(f"\n‚öôÔ∏è  –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:")
            print(f"   –°–∫–∏–¥–∫–∞: 13%")
            print(f"   –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: 7 –¥–Ω–µ–π")
            
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False
    
    print("\n" + "=" * 50)
    return True


if __name__ == "__main__":
    print("\n‚ÑπÔ∏è  –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–∏—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:")
    print("   - –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("   - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ (13%, 7 –¥–Ω–µ–π)")
    print("\n‚ö†Ô∏è  –ü–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!")
    
    confirm = input("\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ? (–≤–≤–µ–¥–∏—Ç–µ '–î–ê' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è): ")
    
    if confirm.strip().upper() == "–î–ê":
        asyncio.run(update_database())
    else:
        print("\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")

