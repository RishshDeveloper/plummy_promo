#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤ /stats –∫–æ–º–∞–Ω–¥–µ
"""

import asyncio
import sys
import logging
import traceback
from datetime import datetime

sys.path.append('.')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)


async def test_stats_formatting():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∞–¥–º–∏–Ω —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ"""
    print('')
    print('üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø /stats')
    print('=' * 60)
    print('')
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from handlers.admin import AdminHandlers
        from database.database import db
        from utils.config import Config
        
        print('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π...')
        print('   ‚úÖ AdminHandlers –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')
        print('   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞')
        print('   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞')
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await db.init()
        print('   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞')
        
        print('')
        print('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ –±–∞–∑—ã...')
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        stats_7d = await db.analytics.get_traffic_stats(days=7)
        stats_30d = await db.analytics.get_traffic_stats(days=30)
        promo_stats = await db.promo.get_promo_stats()
        conversion_stats = await db.analytics.get_conversion_stats()
        total_users = await db.user.get_users_count()
        
        print(f'   üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}')
        print(f'   üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ 7 –¥–Ω–µ–π: {stats_7d.get("unique_users", 0)}')
        print(f'   üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ 30 –¥–Ω–µ–π: {stats_30d.get("unique_users", 0)}')
        print(f'   üéÅ –ü—Ä–æ–º–æ–∫–æ–¥–æ–≤ –≤—ã–¥–∞–Ω–æ: {promo_stats.get("total_generated", 0)}')
        print(f'   üéÅ –ü—Ä–æ–º–æ–∫–æ–¥–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {promo_stats.get("total_used", 0)}')
        
        print('')
        print('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...')
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        message = f"""<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ PlummyPromo –±–æ—Ç–∞</b>

<b>–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (7 –¥–Ω–µ–π): {stats_7d.get('unique_users', 0)}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (30 –¥–Ω–µ–π): {stats_30d.get('unique_users', 0)}

<b>–ü—Ä–æ–º–æ–∫–æ–¥—ã:</b>
‚Ä¢ –í—Å–µ–≥–æ –≤—ã–¥–∞–Ω–æ: {promo_stats.get('total_generated', 0)}
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {promo_stats.get('total_used', 0)}
‚Ä¢ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: {promo_stats.get('usage_rate', 0)}%

<b>–ö–æ–Ω–≤–µ—Ä—Å–∏–∏:</b>
‚Ä¢ –°—Ç–∞—Ä—Ç ‚Üí –ü—Ä–æ–º–æ–∫–æ–¥: {conversion_stats.get('start_to_promo', 0)}%
‚Ä¢ –ü—Ä–æ–º–æ–∫–æ–¥ ‚Üí –ü–æ–∫—É–ø–∫–∞: {conversion_stats.get('promo_to_purchase', 0)}%
‚Ä¢ –û–±—â–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è: {conversion_stats.get('overall_conversion', 0)}%"""

        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –¥–Ω—è–º
        if stats_7d.get('daily_stats'):
            message += "\n\n<b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –¥–Ω—è–º (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –¥–Ω–µ–π):</b>\n"
            for day_stat in stats_7d['daily_stats'][:5]:
                date_str = str(day_stat['date'])
                users_str = str(day_stat['unique_users'])
                sessions_str = str(day_stat['sessions'])
                message += f"‚Ä¢ {date_str}: {users_str} –ø–æ–ª—å–∑. ({sessions_str} —Å–µ—Å—Å–∏–π)\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞
        if stats_7d.get('traffic_by_source'):
            message += "\n<b>–ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ (7 –¥–Ω–µ–π):</b>\n"
            for source in stats_7d['traffic_by_source']:
                source_name = str(source['source'])
                users_count = str(source['users'])
                message += f"‚Ä¢ {source_name}: {users_count} –ø–æ–ª—å–∑.\n"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è
        message_length = len(message)
        print(f'   üìè –î–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {message_length} —Å–∏–º–≤–æ–ª–æ–≤')
        
        if message_length > 4096:
            print('   ‚ö†Ô∏è  –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (>4096 —Å–∏–º–≤–æ–ª–æ–≤)!')
        else:
            print('   ‚úÖ –î–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ª–∏–º–∏—Ç–∞')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º HTML —Ç–µ–≥–∏
        html_tags = ['<b>', '</b>']
        all_tags_present = all(tag in message for tag in html_tags)
        
        if all_tags_present:
            print('   ‚úÖ HTML —Ç–µ–≥–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç')
        else:
            print('   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å HTML —Ç–µ–≥–∞–º–∏')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ Markdown —Å–∏–º–≤–æ–ª–æ–≤
        markdown_symbols = ['**', '_', '`']
        has_markdown = any(symbol in message for symbol in markdown_symbols)
        
        if not has_markdown:
            print('   ‚úÖ Markdown —Å–∏–º–≤–æ–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç')
        else:
            print('   ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã Markdown —Å–∏–º–≤–æ–ª—ã')
        
        print('')
        print('4Ô∏è‚É£ –†–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:')
        print('   ‚úÖ –ó–∞–º–µ–Ω–µ–Ω Markdown (**—Ç–µ–∫—Å—Ç**) –Ω–∞ HTML (<b>—Ç–µ–∫—Å—Ç</b>)')
        print('   ‚úÖ –ò–∑–º–µ–Ω–µ–Ω ParseMode.MARKDOWN –Ω–∞ ParseMode.HTML')
        print('   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω str() –¥–ª—è –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö')
        print('   ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫')
        
        print('')
        print('5Ô∏è‚É£ –ü—Ä–µ–≤—å—é —Å–æ–æ–±—â–µ–Ω–∏—è:')
        print('-' * 50)
        print(message[:500] + '...' if len(message) > 500 else message)
        print('-' * 50)
        
        print('')
        print('‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!')
        print('üéä –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤ /stats –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!')
        
        return True
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}')
        traceback.print_exc()
        return False


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print('')
    print('üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø')
    print('üìÖ –î–∞—Ç–∞:', datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
    print('')
    
    success = await test_stats_formatting()
    
    if success:
        print('')
        print('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!')
        print('‚úÖ –ö–æ–º–∞–Ω–¥–∞ /stats —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫')
        print('')
        print('üìã –ß–¢–û –ë–´–õ–û –ò–°–ü–†–ê–í–õ–ï–ù–û:')
        print('‚Ä¢ –ó–∞–º–µ–Ω–µ–Ω–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Markdown –Ω–∞ HTML')
        print('‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω —Ä–µ–∂–∏–º –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–∞ ParseMode.HTML')
        print('‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ –æ—Ç None –∑–Ω–∞—á–µ–Ω–∏–π —á–µ—Ä–µ–∑ str()')
        print('‚Ä¢ –£–±—Ä–∞–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã')
        print('')
        print('üöÄ –†–ï–ó–£–õ–¨–¢–ê–¢:')
        print('–û—à–∏–±–∫–∞ "Can\'t parse entities" –±–æ–ª—å—à–µ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø–æ—è–≤–ª—è—Ç—å—Å—è!')
        return 0
    else:
        print('')
        print('‚ùå –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–ï–£–°–ü–ï–®–ù–û')
        print('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã')
        return 1


if __name__ == '__main__':
    exit_code = asyncio.run(main())
    sys.exit(exit_code)
